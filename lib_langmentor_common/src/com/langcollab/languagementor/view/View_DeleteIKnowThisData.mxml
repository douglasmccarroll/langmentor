<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2008 - 2013 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.
-->
<view:View_Base xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:button="com.brightworks.component.button.*"
                xmlns:view="com.langcollab.languagementor.view.*"
                title='Clear "I Know This" Input'
                viewActivate="onViewActivate()">

    <fx:Declarations>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
        import com.brightworks.util.Log;
        import com.brightworks.util.Utils_AIR;
        import com.brightworks.util.Utils_Text;
        import com.langcollab.languagementor.constant.Constant_LangMentor_Misc;
        import com.langcollab.languagementor.controller.Command_Data_UpdateVosOfType;
        import com.langcollab.languagementor.controller.Command_Data_UpdateVosOfTypeTechReport;
        import com.langcollab.languagementor.vo.ChunkVO;

        private var _isDisposed:Boolean = false;

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        //
        //          Public Methods
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

        override public function dispose():void {
            super.dispose();
            if (_isDisposed)
                return;
            _isDisposed = true;
        }

        override public function doGoBack():void {
            Log.info("View_DeleteIKnowThisData.doGoBack()");
            navigator.popView(transition_SlideView_Right);
        }

        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        //
        //          Private Methods
        //
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

        private function onCancelButtonClick():void {
            Log.info("View_DeleteIKnowThisData.onCancelButtonClick()");
            navigator.popView(transition_SlideView_Right);
        }

        private function onDeleteButtonClick():void {
            Log.info("View_DeleteIKnowThisData.onDeleteButtonClick()");
            textDisplayLabel.text = "Clearing...";
            cancelButton.enabled = false;
            deleteButton.enabled = false;
            Utils_AIR.keepSystemAwake();
            callLater(onDeleteButtonClick_Continued);
        }

        private function onDeleteButtonClick_Continued():void {
            var c:Command_Data_UpdateVosOfType = new Command_Data_UpdateVosOfType(ChunkVO);
            c.index_propNames_to_newValues["suppressed"] = false;
            var commandReport:Command_Data_UpdateVosOfTypeTechReport = c.execute();
            if (commandReport.isSuccessful) {
                cancelButton.visible = false;
                cancelButton.includeInLayout = false;
                deleteButton.visible = false;
                okayButton.visible = true;
                okayButton.includeInLayout = true;
                textDisplayLabel.text = "        Done  :)";
            }
            else {
                Log.warn(["View_DeleteIKnowThisData.onDeleteButtonClick_Continued()", commandReport]);
                textDisplayLabel.text = "We're sorry, we're having a problem deleting this data. " + Constant_LangMentor_Misc.MESSAGE__REPORT_PROBLEM;
            }
            commandReport.dispose();
        }

        private function onOkayButtonClick():void {
            Log.info("View_DeleteIKnowThisData.onOkayButtonClick()");
            doGoBack();
        }

        private function onViewActivate():void {
            textDisplayLabel.text = 'Are you sure? This will delete all "I Know This" data. This will return all chunks in all lessons to active status.';
        }
        ]]>
    </fx:Script>

    <s:VGroup height = "100%"
              width = "100%"
              horizontalAlign = "center"
              bottom = "10"
              top = "10"
              left = "10"
              right = "10">
        <s:HGroup width = "80%"
                  height = "100%"
                  verticalAlign = "middle">
            <s:Label id = "textDisplayLabel"
                     fontSize = "{Math.round(Utils_Text.getStandardFontSize() * 1.5)}"
                     width = "100%" />
        </s:HGroup>
        <button:NormalButton id = "deleteButton"
                             label = "Delete Data"
                             click = "onDeleteButtonClick()"
                             width = "75%"
                             height = "12%" />
        <s:Spacer />
        <button:NormalButton id = "cancelButton"
                             label = "Cancel"
                             click = "onCancelButtonClick()"
                             width = "75%"
                             height = "12%" />
        <button:NormalButton id = "okayButton"
                             label = "OK"
                             click = "onOkayButtonClick()"
                             visible = "false"
                             includeInLayout = "false"
                             width = "75%"
                             height = "12%" />
        <s:Spacer />
    </s:VGroup>
</view:View_Base>
