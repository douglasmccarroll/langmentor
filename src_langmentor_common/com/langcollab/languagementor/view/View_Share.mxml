<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2018 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.






20181003  This class is now deprecated, i.e. no longer used








-->
<view:View_Base_BottomButtons xmlns:fx = "http://ns.adobe.com/mxml/2009"
                              xmlns:view = "com.langcollab.languagementor.view.*"
                              creationComplete = "onCreationComplete()"
                              title = "Share">

   <fx:Declarations>
   </fx:Declarations>

   <fx:Script>
        <![CDATA[
      import com.brightworks.util.Log;
      import com.brightworks.util.Utils_Dispose;
      import com.brightworks.util.Utils_NativeExtensions;
      import com.brightworks.util.Utils_System;
      import com.langcollab.languagementor.component.uiwidget.IUIWidget_Text;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Bold_Text;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Heading;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Text;
      import com.langcollab.languagementor.constant.Constant_AppConfiguration;
      import com.langcollab.languagementor.view.supportClasses.ViewContext;

      import mx.controls.Spacer;

      import spark.components.Button;
      import spark.components.CheckBox;

      private var _index_Buttons_to_ClickFunctions:Dictionary = new Dictionary();
      private var _isDisposed:Boolean;
      private var _isFacebookInviteInProgress:Boolean;
      private var _isTweetInProgress:Boolean;
      private var _naggingOptOutCheckbox:CheckBox;

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Public Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override public function dispose():void {
         super.dispose();
         if (_isDisposed)
            return;
         _isDisposed = true;
         if (_index_Buttons_to_ClickFunctions) {
            for (var o:Object in _index_Buttons_to_ClickFunctions) {
               var btn:Button = Button(o);
               var func:Function = _index_Buttons_to_ClickFunctions[o];
               btn.removeEventListener(MouseEvent.CLICK, func);
            }
            Utils_Dispose.disposeDictionary(_index_Buttons_to_ClickFunctions, true);
            _index_Buttons_to_ClickFunctions = null;
         }
      }

      override public function doGoBack():void {
         Log.info("View_Share.doGoBack()");
         handleOptOutCheckboxState();
         if (contextType == ViewContext.CONTEXT_TYPE__MAIN_SCREEN_LINK_BUTTON)
            navigator.pushView(View_Home, null, null, transition_SlideView_Left);
         else
            super.doGoBack();
      }

      override public function doGoHome():void {
         handleOptOutCheckboxState();
         super.doGoHome();
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Protected Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override protected function onPrimaryBottomButtonClick(event:MouseEvent):void {
         Log.info("View_Share.onPrimaryBottomButtonClick()");
         handleOptOutCheckboxState();
         if (contextType == ViewContext.CONTEXT_TYPE__MAIN_SCREEN_LINK_BUTTON)
            navigator.pushView(View_Home, null, null, transition_SlideView_Left);
         else
            super.onPrimaryBottomButtonClick(event);
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Private Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      private function displayButtons(buttonLabelList:Array, clickFunctionList:Array):void {
         if (buttonLabelList.length != clickFunctionList.length) {
            Log.error("View_Giving.displayButtons(): List args are different lengths");
            return;
         }
         for (var i:int = 0; i < buttonLabelList.length; i++) {
            var btn:Button = new Button();
            var func:Function = clickFunctionList[i];
            btn.label = buttonLabelList[i];
            btn.percentWidth = 100;
            btn.addEventListener(MouseEvent.CLICK, func);
            _index_Buttons_to_ClickFunctions[btn] = func;
            viewletGroup.addElement(btn);
            viewletGroup.addElement(new Spacer());
         }
      }

      private function displayNaggingOptOut():void {
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         _naggingOptOutCheckbox = new CheckBox();
         _naggingOptOutCheckbox.label = "Nagging Opt-Out";
         _naggingOptOutCheckbox.selected = appStatePersistenceManager.retrieveNaggingDisabled();
         viewletGroup.addElement(_naggingOptOutCheckbox);
         var textWidget:UIWidget_Viewlet__Text = new UIWidget_Viewlet__Text();
         textWidget.text = "Select this checkbox if you don't " + 'want Language Mentor to display the "Share" link on the Home screen.';
         viewletGroup.addElement(textWidget);
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
      }

      private function handleOptOutCheckboxState():void {
         if (_naggingOptOutCheckbox)
            appStatePersistenceManager.persistNaggingDisabled(_naggingOptOutCheckbox.selected);
      }

      private function onButtonClick_FacebookShare(event:MouseEvent):void {
         Log.info("View_Share.onButtonClick_FacebookInvite()");
         if (!_isFacebookInviteInProgress) {
            _isFacebookInviteInProgress = true;
            //Utils_NativeExtensions.facebookShare(onFacebookShareResult);
         }
      }

      private function onButtonClick_OpenAppStoreToRate(event:MouseEvent):void {
         Log.info("View_Share.onButtonClick_OpenAppStoreToRate()");
         Utils_NativeExtensions.showRatingsPrompt();
      }

      private function onCreationComplete():void {
         var widget:IUIWidget_Text;
         widget = new UIWidget_Viewlet__Heading();
         widget.text = "If you like Language Mentor, please let others know about us!";
         viewletGroup.addElement(widget);
         viewletGroup.addElement(new Spacer());
         widget = new UIWidget_Viewlet__Text();
         widget.text = "Language Mentor is an open platform supported by its users and developers. Please help us spread the word!";
         viewletGroup.addElement(widget);
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         widget = new UIWidget_Viewlet__Bold_Text();
         widget.text = "Give us a positive rating on the " + Utils_System.getAppStoreName();
         viewletGroup.addElement(widget);
         viewletGroup.addElement(new Spacer());
         displayButtons(["Rate Language Mentor"], [onButtonClick_OpenAppStoreToRate]);

         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         if (Utils_NativeExtensions.isFacebookSupported()) {
            widget = new UIWidget_Viewlet__Bold_Text();
            widget.text = "Facebook";
            viewletGroup.addElement(widget);
            viewletGroup.addElement(new Spacer());
            displayButtons(["Share on Facebook"], [onButtonClick_FacebookShare]);
            viewletGroup.addElement(new Spacer());
            viewletGroup.addElement(new Spacer());
         }
         widget = new UIWidget_Viewlet__Bold_Text();
         widget.text = "Thanks!  :)";
         viewletGroup.addElement(widget);
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         displayNaggingOptOut();
      }

      private function onFacebookShareResult():void {
         _isFacebookInviteInProgress = false;
      }

      ]]>
    </fx:Script>
</view:View_Base_BottomButtons>
