<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2020 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.
-->
<view:View_Base_BottomButtons xmlns:fx = "http://ns.adobe.com/mxml/2009"
                              xmlns:view = "com.langcollab.languagementor.view.*"
                              creationComplete = "onCreationComplete()"
                              title = "Play Lessons">

   <fx:Declarations>
   </fx:Declarations>

   <fx:Script>
        <![CDATA[
      import com.brightworks.util.Log;
      import com.langcollab.languagementor.component.uiwidget.IUIWidget_Text;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Bullet_Text;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Heading;
      import com.langcollab.languagementor.component.uiwidget.UIWidget_Viewlet__Text;
      import com.langcollab.languagementor.constant.Constant_MentorTypeSpecific;
      import com.langcollab.languagementor.view.supportClasses.ViewContext;

      import mx.controls.Spacer;

      import spark.transitions.ViewTransitionBase;

      private var _isDisposed:Boolean = false;

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Public Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override public function dispose():void {
         super.dispose();
         if (_isDisposed)
            return;
         _isDisposed = true;
      }

      override public function doGoBack():void {
         appStatePersistenceManager.persistHelp_LastViewDate_PlayLessons(new Date());
         switch (contextType) {
            case ViewContext.CONTEXT_TYPE__HELP:
               navigator.popView(transition_SlideView_Right);
               break;
            case ViewContext.CONTEXT_TYPE__HOME_SCREEN_BUTTON:
               navigator.popView(transition_SlideView_Up);
               break;
            default:
               Log.error("View_Help_Play_Lessons.doGoBack(): No case for: " + contextType);
         }
      }

      override public function doGoHome():void {
         appStatePersistenceManager.persistHelp_LastViewDate_PlayLessons(new Date());
         switch (contextType) {
            case ViewContext.CONTEXT_TYPE__HELP:
               super.doGoHome();
               break;
            case ViewContext.CONTEXT_TYPE__HOME_SCREEN_BUTTON:
               navigator.popView(transition_SlideView_Up);
               break;
            default:
               Log.error("View_Help_Play_Lessons.doGoHome(): No case for: " + contextType);
         }
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Protected Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override protected function goToNextScreen(transition:ViewTransitionBase = null, newContextType:String = null):void {
         super.goToNextScreen(transition_SlideView_Down, ViewContext.CONTEXT_TYPE__HOME_SCREEN_BUTTON);
      }

      override protected function onPrimaryBottomButtonClick(event:MouseEvent):void {
         appStatePersistenceManager.persistHelp_LastViewDate_PlayLessons(new Date());
         super.onPrimaryBottomButtonClick(event);
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Private Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      private function onCreationComplete():void {
         var textWidget:IUIWidget_Text
         textWidget = new UIWidget_Viewlet__Heading();
         textWidget.text = "How to use the Play Lessons screen";
         viewletGroup.addElement(textWidget);
         viewletGroup.addElement(new Spacer());
         viewletGroup.addElement(new Spacer());
         textWidget = new UIWidget_Viewlet__Bullet_Text();
         textWidget.text = "Lessons are divided into chunks. You can move between chunks with the < and > buttons.";
         viewletGroup.addElement(textWidget);
         textWidget = new UIWidget_Viewlet__Bullet_Text();
         textWidget.text = "Once you've mastered a chunk, press the I Know This! button. " + Constant_MentorTypeSpecific.APP_NAME__SHORT + " will no longer drill you on that chunk.";
         viewletGroup.addElement(textWidget);
         textWidget = new UIWidget_Viewlet__Bullet_Text();
         textWidget.text = 'To restore all lessons so that you will be drilled on all chunks, go to More > Manage Lessons > Delete "I Know This" Data.';
         viewletGroup.addElement(textWidget);
         textWidget = new UIWidget_Viewlet__Bullet_Text();
         textWidget.text = 'Or, to restore a single lesson so that you are drilled on all chunks, simply deselect the lesson, then reselect it, in the Select Lessons screen.';
         viewletGroup.addElement(textWidget);
         if (Constant_MentorTypeSpecific.CREATIVE_SYNTAX__DISPLAY_EXPLANATION) {
            textWidget = new UIWidget_Viewlet__Bullet_Text();
            textWidget.text = "You may notice that some lessons use " + '"creative"' + " grammar when translating chunks, using syntax similar to the " + model.getCurrentTargetLanguageDisplayName_InCurrentNativeLanguage() + " content that they are translating. This is done in order to help you absorb meaning and syntax.";
            viewletGroup.addElement(textWidget);
         }

      }
      ]]>
    </fx:Script>
</view:View_Base_BottomButtons>
