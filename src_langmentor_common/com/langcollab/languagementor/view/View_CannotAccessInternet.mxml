<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2018 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.
-->
<view:View_Base xmlns:fx = "http://ns.adobe.com/mxml/2009"
                xmlns:s = "library://ns.adobe.com/flex/spark"
                xmlns:view = "com.langcollab.languagementor.view.*"
                creationComplete="onCreationComplete()"
                title = ""
                xmlns:button = "com.brightworks.component.button.*">

   <fx:Declarations>
   </fx:Declarations>

   <fx:Script>
        <![CDATA[
      import com.brightworks.event.BwEvent;
      import com.brightworks.util.Utils_Layout;
      import com.brightworks.constant.Constant_AppConfiguration;
      import com.brightworks.util.Utils_Text;
      import com.langcollab.languagementor.constant.Constant_MentorTypeSpecific;

      private var _isDisposed:Boolean = false;

      private function onCreationComplete():void {
         textArea.text = "We're sorry, but " + Constant_MentorTypeSpecific.APP_NAME__SHORT + " cannot access the Internet.\n\nAn Internet connection is required for app setup.\n\nPlease ensure that you have an internet connection and try again.";
      }

      private function onTryAgainButtonClick():void {
         NativeApplication.nativeApplication.dispatchEvent(new BwEvent(BwEvent.APP_RESTART_NEEDED));
      }
      
      ]]>
    </fx:Script>
   <s:VGroup height = "100%"
             width = "100%">
      <s:Spacer />
      <s:TextArea
            id = "textArea"
            height = "100%"
            width = "100%"
            paddingTop="{Utils_Text.getStandardFontSize() * 2}"
            paddingBottom="{Utils_Text.getStandardFontSize() * 2}"
            paddingLeft="{Utils_Text.getStandardFontSize() * 2}"
            paddingRight="{Utils_Text.getStandardFontSize() * 2}"
            fontSize="{Math.round(Utils_Text.getStandardFontSize() * 1.5)}"
            borderVisible = "false"/>
      <s:BorderContainer id = "buttonContainer"
                         width = "100%"
                         backgroundColor = "0x333333">
         <s:layout>
            <s:HorizontalLayout horizontalAlign = "center"
                                paddingTop = "{Utils_Layout.getStandardPadding()}"
                                paddingBottom = "{Utils_Layout.getStandardPadding() + 4}"/>
         </s:layout>
         <button:NormalButton id ="tryAgainButton"
                              label = "Try Again"
                              click = "onTryAgainButtonClick()"
                              width = "60%"/>
      </s:BorderContainer>
   </s:VGroup>
</view:View_Base>
