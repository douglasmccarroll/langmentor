<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2018 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.
-->
<view:View_Base xmlns:fx = "http://ns.adobe.com/mxml/2009"
                xmlns:button="com.langcollab.languagementor.component.button.*"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:checkbox = "com.brightworks.component.checkbox.*"
                xmlns:uiwidget = "com.langcollab.languagementor.component.uiwidget.*"
                xmlns:view="com.langcollab.languagementor.view.*"
                initialize = "onInitialize()"
                title="Download Beta Lessons?">

   <fx:Declarations>
   </fx:Declarations>

   <fx:Script>
        <![CDATA[
      import com.brightworks.util.Log;
      import com.brightworks.util.Utils_Layout;
      import com.brightworks.util.Utils_Text;
      import com.langcollab.languagementor.constant.Constant_MentorTypeSpecific;

      private var _initialDownloadBetaLessonsValue:Boolean;
      private var _isDisposed:Boolean = false;

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Public Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override public function dispose():void {
         super.dispose();
         if (_isDisposed)
            return;
         _isDisposed = true;
      }

      override public function doGoBack():void {
         Log.info("View_DownloadBetaLessons.doGoBack()");
         super.doGoBack();
         dispose();
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Private Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      private function onInitialize():void {
         _initialDownloadBetaLessonsValue = model.hasUserSelectedDownloadBetaLessonsOption;
         textDisplayLabel.text = "If you select this option, " + Constant_MentorTypeSpecific.APP_NAME__SHORT + " will download both published lessons and lessons that are still being beta-tested. Some beta lessons may have errors in them.";
         downloadBetaLessonsCheckBox.selected = model.hasUserSelectedDownloadBetaLessonsOption;
      }

      private function onPrimaryBottomButtonClick():void {
         Log.info("View_DownloadBetaLessons.onSubmitButtonClick()");
         if (_initialDownloadBetaLessonsValue != downloadBetaLessonsCheckBox.selected) {
            model.hasUserSelectedDownloadBetaLessonsOption = downloadBetaLessonsCheckBox.selected;
            lessonDownloadController.abortAnyCurrentLessonDownloadProcessesAndRestartIfAppropriate();
         }
         doGoBack();
      }

      ]]>
    </fx:Script>

   <s:VGroup height = "100%"
             width = "100%">
      <s:Scroller id = "viewletGroupScroller"
                  horizontalScrollPolicy = "off"
                  skinClass = "com.brightworks.component.scroll.InitialFadeScrollerSkin"
                  height = "100%"
                  width = "100%">
         <s:VGroup id = "viewletGroup"
                   width = "100%"
                   paddingBottom = "{Utils_Layout.getStandardPadding()}"
                   paddingLeft = "{Utils_Layout.getStandardPadding()}"
                   paddingRight = "{Utils_Layout.getStandardPadding()}"
                   paddingTop = "{Utils_Layout.getStandardPadding()}">
            <s:Spacer/>
            <checkbox:NormalCheckBox id ="downloadBetaLessonsCheckBox"
                                     label = "Download Beta Lessons"/>
            <s:Spacer/>
            <s:Spacer/>
            <s:Label id = "textDisplayLabel"
                     fontSize = "{Math.round(Utils_Text.getStandardFontSize() * 1.5)}"
                     width = "100%"/>
         </s:VGroup>
      </s:Scroller>
      <s:BorderContainer id = "buttonContainer"
                         width = "100%"
                         backgroundColor = "0x8888CC"
                         bottom = "0">
         <s:layout>
            <s:HorizontalLayout horizontalAlign = "center"
                                paddingTop = "{Utils_Layout.getStandardPadding()}"
                                paddingBottom = "{Utils_Layout.getStandardPadding() + 4}"/>
         </s:layout>
         <s:HGroup id = "buttonGroup"
                   width = "100%"
                   horizontalAlign = "center">
            <button:Button_Standard id = "primaryBottomButton"
                                    label = "OK"
                                    click = "onPrimaryBottomButtonClick()"
                                    width = "60%"/>
         </s:HGroup>
      </s:BorderContainer>
   </s:VGroup>

</view:View_Base>
