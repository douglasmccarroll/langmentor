<?xml version = "1.0" encoding = "utf-8"?>
<!--
Copyright 2020 Brightworks, Inc.

This file is part of Language Mentor.

Language Mentor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Language Mentor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Language Mentor.  If not, see <http://www.gnu.org/licenses/>.
-->
<view:Viewlet_Base xmlns:fx = "http://ns.adobe.com/mxml/2009"
                   xmlns:s = "library://ns.adobe.com/flex/spark"
                   xmlns:uiwidget = "com.langcollab.languagementor.component.uiwidget.*"
                   xmlns:view = "com.langcollab.languagementor.view.*"
                   creationComplete = "onCreationComplete()"
                   implements = "com.brightworks.interfaces.IDisposable"
                   xmlns:radiobutton = "com.brightworks.component.radiobutton.*">

   <fx:Metadata>
      [Event(name="complete", type="flash.events.Event")]
   </fx:Metadata>

   <fx:Script>
        <![CDATA[
      import com.brightworks.util.Log;
      import com.langcollab.languagementor.constant.Constant_MentorTypeSpecific;

      public var suggestYesOption:Boolean = false;

      private var _isDisposed:Boolean;

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Getters / Setters
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      private var _userChoice:Boolean;

      public function get userChoice():Boolean {
         return _userChoice;
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Public Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      override public function dispose():void {
         super.dispose();
         if (_isDisposed)
            return;
         _isDisposed = true;
      }

      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      //
      //          Private Methods
      //
      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      private function onCreationComplete():void {
         Log.debug("Viewlet_AutomaticDownloads.onCreationComplete()");
         explanatoryTextWidget.text = "If you select this option, " + Constant_MentorTypeSpecific.APP_NAME__SHORT + " will search for new lessons and download them as they become available. You won’t need to do anything."
         if (suggestYesOption) {
            _userChoice = true;
            radioButtonGroup.selection = yesRadioButton;
         }
         else {
            _userChoice = model.autoDownloadLessons;
            radioButtonGroup.selection = model.autoDownloadLessons ? yesRadioButton : noRadioButton;
         }
      }

      private function onRadioButtonGroupChange():void {
         Log.info("Viewlet_AutomaticDownloads.onRadioButtonGroupChange(): " + radioButtonGroup.selection.label);
         switch (radioButtonGroup.selection) {
            case yesRadioButton:
               _userChoice = true;
               break;
            case noRadioButton:
               _userChoice = false;
               break;
            default:
               Log.error("Viewlet_AutomaticDownloads.onRadioButtonGroupChange(): No case for radioButtonGroup.selection");
         }
      }
      ]]>
    </fx:Script>

   <fx:Declarations>
      <radiobutton:NormalRadioButtonGroup id = "radioButtonGroup"
                                          change = "onRadioButtonGroupChange()"/>
   </fx:Declarations>

   <s:VGroup horizontalAlign = "left"
             height = "100%"
             width = "100%">
      <uiwidget:UIWidget_Viewlet__Heading id = "uiWidget_Viewlet__Heading"
                                          text = "Automatically download lessons?"/>
      <s:Spacer/>
      <s:RadioButton id = "yesRadioButton"
                     group = "{radioButtonGroup}"
                     label = "Yes"/>
      <uiwidget:UIWidget_Viewlet__Text id = "explanatoryTextWidget"/>
      <s:Spacer/>
      <s:RadioButton id = "noRadioButton"
                     group = "{radioButtonGroup}"
                     label = "No"/>
      <uiwidget:UIWidget_Viewlet__Text
            text = "If you select this option, you’ll be responsible for deciding when to initiate lesson downloads."/>
      <s:Spacer/>
   </s:VGroup>
</view:Viewlet_Base>





















